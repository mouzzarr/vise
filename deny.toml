targets = [
    { triple = "x86_64-unknown-linux-musl" },
    { triple = "x86_64-apple-darwin" },
]

[advisories]
# The lint level for unmaintained crates
unmaintained = "deny"
# The lint level for crates that have been yanked from their source registry
yanked = "deny"
# The lint level for crates with security notices. Note that as of
# 2019-12-17 there are no security notice advisories in
# https://github.com/rustsec/advisory-db
notice = "deny"
# Threshold for security vulnerabilities, any vulnerability with a CVSS score
# lower than the range specified will be ignored. Note that ignored advisories
# will still output a note when they are encountered.
# * None - CVSS Score 0.0
# * Low - CVSS Score 0.1 - 3.9
# * Medium - CVSS Score 4.0 - 6.9
# * High - CVSS Score 7.0 - 8.9
# * Critical - CVSS Score 9.0 - 10.0
severity-threshold = "medium"

[licenses]
# We want to deny every license that isn't explicitly added to the allow list.
unlicensed = "deny"
copyleft = "deny"
allow-osi-fsf-free = "neither"
default = "deny"
# We want to set a high confidence threshold for license detection.
confidence-threshold = 1.0
# Licenses that are allowed to be used in crates.
allow = [
  # Permissive licenses
  "Apache-2.0",
  "BSD-2-Clause",
  "MIT",
  "Unicode-DFS-2016",
]

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "deny"
# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
  # Old versions used by `metrics`
  { name = "hashbrown", version = "=0.12.3" },
  # Old versions required by `derive_more`
  { name = "syn", version = "=1.0.109" },
  # Old versions required by `hyper`
  { name = "socket2", version = "=0.4.9" },
]
